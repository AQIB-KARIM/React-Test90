{"version":3,"sources":["Components/Subfields.js","Components/Modalinfo.js","App.js","reportWebVitals.js","index.js"],"names":["Subfields","props","List","name","fieldKey","params","add","remove","map","param","index2","className","style","display","marginBottom","align","span","marginTop","marginLeft","key","rules","required","message","placeholder","type","MinusCircleOutlined","onClick","PlusOutlined","Modalinfo","useState","isModalVisible","setIsModalVisible","Form","useForm","form","Option","Select","Text","Typography","setSelectValue","handleChange","value","title","visible","onOk","onCancel","layout","Item","label","onChange","field","PlusCircleOutlined","id","disabled","fontWeight","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.beff5085.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Form, Button, Space, Select, Col, Input, Row } from \"antd\";\r\nimport { PlusOutlined, MinusCircleOutlined } from \"@ant-design/icons\";\r\n\r\nconst Subfields = props => {\r\n    \r\n    return (\r\n        <>\r\n            <Form.List name={[props.fieldKey, \"Params\"]}>\r\n                {(params, { add, remove }) => {\r\n                    return (\r\n                        <>\r\n                            {params.map((param, index2) => (\r\n                                <Row className=\"subfields\"\r\n                                    key={param.key}\r\n                                    style={{ display: \"flex\", marginBottom: 8 }}\r\n                                    align='bottom'\r\n                                >\r\n\r\n                                    <Col span={19} style={{ marginTop: \"8px\", marginLeft: \"8px\" }}\r\n                                        {...param}\r\n                                        name={[param.name, \"param\"]}\r\n                                        fieldKey={[param.fieldKey, \"param\"]}\r\n                                        key={index2}\r\n                                        // noStyle\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: \"Perameter Missing\"\r\n                                            }\r\n                                        ]}>\r\n\r\n                                        <Input placeholder=\"insert parameter\" type='text' />\r\n\r\n                                    </Col>\r\n\r\n                                    <Col style={{ marginLeft: '25px' }}>\r\n                                        <MinusCircleOutlined className=\"plus\"\r\n                                            onClick={() => {\r\n                                                remove(param.name);\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                            ))}\r\n\r\n\r\n\r\n                            <Button className=\"Add-param\"\r\n                                type=\"dashed\"\r\n                                onClick={() => {\r\n                                    add();\r\n                                }}\r\n                            >\r\n                                <PlusOutlined /> Add Parameters\r\n                            </Button>\r\n\r\n                        </>\r\n                    );\r\n                }}\r\n            </Form.List>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Subfields;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Button, Form, Input, Select, Typography, Space, Row, Col } from 'antd';\r\nimport { MinusCircleOutlined, PlusCircleOutlined } from '@ant-design/icons';\r\nimport Subfields from './Subfields';\r\n\r\nconst Modalinfo = () => {\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [form] = Form.useForm();\r\n    const { Option } = Select;\r\n    const { Text } = Typography\r\n    const [select, setSelectValue] = useState('')\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setSelectValue(value);\r\n    }\r\n\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='main-div'>\r\n                <Button type=\"primary\" onClick={showModal}>\r\n                    Open Modal\r\n                </Button>\r\n            </div>\r\n            <Modal title=\"Add Revenue Group\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n\r\n                <Form\r\n                    form={form}\r\n                    layout=\"vertical\" >\r\n\r\n                    <Form.Item label=\"Revenue Group Title\" >\r\n                        <Input placeholder=\"Fashion - 15%\" type='text' />\r\n\r\n                    </Form.Item>\r\n\r\n                    <div>\r\n                        <Text>If</Text>\r\n                        <Select onChange={handleChange}>\r\n                            <Option value='ALL'>ALL</Option>\r\n                            <Option value='ONE'>ONE</Option>\r\n                            <Option value='TWO'>TWO</Option>\r\n                            <Option value='THREE'>THREE</Option>\r\n                        </Select>\r\n                        <Text>of the below conditions are met</Text>\r\n                    </div>\r\n\r\n\r\n\r\n                    <Form.List name=\"users\">\r\n                        {(field, { add, remove }) => (\r\n                            <>\r\n\r\n                                <Form.Item>\r\n\r\n                                    <Row className='background-color'>\r\n                                        <Col>\r\n                                            <Select className='drops' onChange={handleChange}>\r\n                                                <Option value='ALL'>ALL</Option>\r\n                                                <Option value='ONE'>ONE</Option>\r\n                                                <Option value='TWO'>TWO</Option>\r\n                                                <Option value='THREE'>THREE</Option>\r\n\r\n                                            </Select>\r\n                                        </Col>\r\n\r\n                                        <Col>\r\n\r\n                                            <Select className='drops' onChange={handleChange}>\r\n                                                <Option value='ALL'>ALL</Option>\r\n                                                <Option value='ONE'>ONE</Option>\r\n                                                <Option value='TWO'>TWO</Option>\r\n                                                <Option value='THREE'>THREE</Option>\r\n                                            </Select>\r\n\r\n                                        </Col>\r\n\r\n                                        <Col span={18} className='p-2 input-field'>\r\n\r\n                                            <Input placeholder=\"insert parameter\" type='text' />\r\n\r\n\r\n\r\n\r\n\r\n                                        </Col>\r\n\r\n                                        <Col className='py-2'>\r\n                                            <Button className=' plus-minus'>\r\n                                                <PlusCircleOutlined onClick={() => add()} />\r\n                                            </Button>\r\n\r\n                                            <Button className='plus-minus' id='disable'>\r\n                                                <MinusCircleOutlined disabled='true' />\r\n                                            </Button>\r\n\r\n                                        </Col>\r\n\r\n\r\n\r\n                                    </Row>\r\n                                </Form.Item>\r\n\r\n\r\n                                {field.map((field, key) => (\r\n\r\n\r\n                                    <>\r\n\r\n                                        <hr />\r\n\r\n                                        <Row className='rule-head'>\r\n\r\n\r\n                                            <Col style={{ fontWeight: \"bold\" }}>RULE {field.key + 1}</Col>\r\n\r\n                                        </Row>\r\n\r\n                                        <Row key={field.key} className='background-color' align=\"baseline\" >\r\n\r\n\r\n\r\n                                            <Col\r\n                                                {...field}\r\n                                                name={[field.name, 'first']}\r\n\r\n                                            >\r\n                                                <Select className='drops' onChange={handleChange}>\r\n                                                    <Option value='ALL'>ALL</Option>\r\n                                                    <Option value='ONE'>ONE</Option>\r\n                                                    <Option value='TWO'>TWO</Option>\r\n                                                    <Option value='THREE'>THREE</Option>\r\n\r\n                                                </Select>\r\n                                            </Col>\r\n\r\n                                            <Col\r\n                                                {...field}\r\n                                                name={[field.name, 'last']}\r\n                                            >\r\n                                                <Select className='drops' onChange={handleChange}>\r\n                                                    <Option value='ALL'>ALL</Option>\r\n                                                    <Option value='ONE'>ONE</Option>\r\n                                                    <Option value='TWO'>TWO</Option>\r\n                                                    <Option value='THREE'>THREE</Option>\r\n\r\n                                                </Select>\r\n                                            </Col>\r\n\r\n\r\n\r\n                                            <Col span={18} style={{ marginTop: \"8px\", marginLeft: \"8px\" }}\r\n                                                {...field}\r\n                                                name={[field.name, 'insert new rule']}>\r\n\r\n                                                <Input placeholder=\"insert parameter\" type='text' />\r\n\r\n                                            </Col>\r\n\r\n                                            <Col style={{ marginTop: \"10px\" }}>\r\n                                                <MinusCircleOutlined className='plus-minus' onClick={() => remove(field.name)} />\r\n                                            </Col>\r\n\r\n\r\n                                            <Col span={24}>\r\n                                                <Subfields fieldKey={field.name} />\r\n                                            </Col>\r\n\r\n                                            <hr />\r\n                                        </Row>\r\n\r\n                                    </>\r\n\r\n                                ))}\r\n\r\n\r\n                            </>\r\n                        )}\r\n                    </Form.List>\r\n            \r\n                </Form>\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modalinfo\r\n","import './App.css';\nimport Modalinfo from './Components/Modalinfo';\n\nfunction App() {\n  return (\n    <div>\n      <Modalinfo/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}